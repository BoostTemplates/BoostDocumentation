"use strict";(self.webpackChunkboost_documentation=self.webpackChunkboost_documentation||[]).push([[114],{8966:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>n,metadata:()=>a,toc:()=>u});var o=r(4848),s=r(8453);const n={sidebar_position:4},i="Create Private Route",a={id:"tutorial-basics/create_priv_route",title:"Create Private Route",description:"Private routes are different from public in way that you need to provide access token before accessing them. Those routes should be provided only to loged users:",source:"@site/docs/tutorial-basics/create_priv_route.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/create_priv_route",permalink:"/docs/tutorial-basics/create_priv_route",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/create_priv_route.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Create Public Route",permalink:"/docs/tutorial-basics/create_public_route"},next:{title:"Configure BOOST",permalink:"/docs/tutorial-basics/configure_BOOST"}},c={},u=[];function d(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"create-private-route",children:"Create Private Route"})}),"\n",(0,o.jsx)(t.p,{children:"Private routes are different from public in way that you need to provide access token before accessing them. Those routes should be provided only to loged users:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-Python",children:"@routes_bp.route('/my_private_route')\n@jwt_required(locations=['cookies'])\ndef user():\n\n    # obtain user from the jwt\n    user = User.query.filter_by(\n        id=get_jwt_identity()\n    ).first()\n\n    if user:\n      # execute or serve code for user\n    else:\n      # else redirect to login page\n      return redirect(\"join\")\n"})}),"\n",(0,o.jsx)(t.h1,{id:"create-admin-route",children:"Create Admin Route"}),"\n",(0,o.jsxs)(t.p,{children:["Admin routes are no different to private, you just need to make sure ",(0,o.jsx)(t.code,{children:"user.id"})," is same as ",(0,o.jsx)(t.code,{children:"CONFIG.ADMIN_ID"}),"."]})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>a});var o=r(6540);const s={},n=o.createContext(s);function i(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);